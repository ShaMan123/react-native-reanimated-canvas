module.exports = [
  {"filepath":"pages\\1.index.md","title":"Overview","description":"","link":"overview","data":"# Reanimated Canvas\r\n\r\n## react-native-reanimated-canvas\r\n\r\n### Light-weight, Low-level, Declarative\r\n\r\n---\r\n\r\nThis repository was originally forked from `@terrylinla/react-native-sketch-canvas`, which is no longer active.\r\nThe source code has been heavily refactored to boost performance.\r\n\r\nSome features have been added, some removed or changed, making it more light weight and low-level, befitting `react-native-reanimated`.\r\n\r\nDue to these major changes a lot more can be done with this library, including integration with other libraries and components such as `react-native-svg`.\r\n\r\n**NOTICE:** `iOS` is not yet supported.\r\n\r\n--\r\n\r\n## Performance\r\n\r\n1. Transparent path needs to be checked\r\n1. All touches are now handled in native\r\n\r\n--\r\n\r\n## Example\r\n\r\nCheck full example app in the [Example](./CanvasExample) folder.\r\n\r\n--\r\n\r\n## Contributing\r\n\r\nFeel free to submit issues and PRs.\r\n","type":"md","dependencies":[]},{"filepath":"pages\\2.getting_started.md","title":"Getting Started","description":"","link":"getting-started","data":"# Installation\r\n\r\n---\r\n\r\nThis library needs `react-native` > 0.60 to operate.\r\n\r\n```bash\r\nnpm install react-native-reanimated react-native-gesture-handler react-native-reanimated-canvas --save\r\n//  OR\r\nyarn add react-native-reanimated react-native-reanimated react-native-reanimated-canvas\r\n\r\n//  For iOS\r\ncd ios && pod install\r\n```\r\n\r\n## @next\r\nWIP\r\n```bash\r\nyarn add react-native-reanimated-canvas@next\r\n```\r\n\r\n--\r\n\r\n## Usage\r\n\r\n```ts\r\nimport React, { Component } from 'react';\r\nimport RCanvas, { RCanvasProps, RPath } from 'react-native-reanimated-canvas';\r\n\r\nexport default function Canvas(props: RCanvasProps) {\r\n  return (\r\n    <RCanvas\r\n      style={{ flex: 1 }}\r\n      strokeColor='red'\r\n      strokeWidth={7}\r\n    >\r\n      <RPath\r\n        points={new Array(200).fill(0).map((v, i) => ({ x: i, y: i }))}\r\n        strokeWidth={20}\r\n        strokeColor='pink'\r\n      />\r\n    </RCanvas>\r\n  );\r\n}\r\n\r\n```","type":"md","dependencies":[]},{"filepath":"pages\\3.usage.md","title":"In Depth","description":"","link":"in-depth","data":"# Properties, Methods and Types\r\n\r\n---\r\n\r\nTake a look at [types.ts](./src/types.ts).","type":"md","dependencies":[]},{"filepath":"pages\\4.migration_path.md","title":"Migration Path","description":"","link":"migration-path","data":"# Migration Path\r\n\r\n---\r\n\r\n## Custom Touch Handling\r\n\r\nIf you don't use `react-native-gesture-handler` or `react-native-reanimated` consider doing so.\r\nThese are excellent, performant libraries.\r\nNon the less, a basic implementation of this library is exposed for such a case.\r\nTake a look at [JSTouchHandling](./CanvasExample/App/JSTouchHandling.tsx).\r\nYou will have to set up touch handling yourself, you can use exposed hooks for common usage.\r\n\r\n```ts\r\nimport RCanvasBase, { useCanvasPanResponder, useCanvasGestureHandler } from 'react-native-reanimated-canvas/base';\r\n```","type":"md","dependencies":[]},{"filepath":"pages\\5.license.md","title":"License","description":"","link":"license","data":"# License\r\n\r\n---\r\n\r\nReact native reanimated library is licensed under [The MIT License](https://github.com/software-mansion/react-native-reanimated/blob/master/LICENSE).\r\n","type":"md","dependencies":[]}
]