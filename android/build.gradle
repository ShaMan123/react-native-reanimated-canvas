apply plugin: 'com.android.library'

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

buildscript {
    repositories {
        maven { url "https://maven.google.com" }
        jcenter()
        google()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
        maven {
            url "https://maven.fabric.io/public"
        }
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.2'
    }
}

allprojects {
    repositories {
        mavenLocal()
        maven { url "https://maven.google.com" }
        jcenter()
        google()
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url "$rootDir/../example/node_modules/react-native/android"
        }
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
    }
}

android {
    compileSdkVersion safeExtGet('compileSdkVersion', 27)
    //buildToolsVersion safeExtGet('buildToolsVersion', '27.0.3')

    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', 19)
        targetSdkVersion safeExtGet('targetSdkVersion', 27)
        versionCode 1
        versionName "1.0"
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
        renderscriptTargetApi 19
        renderscriptSupportModeEnabled true
    }
    splits {
        abi {
            reset()
            enable safeExtGet('enableSeparateBuildPerCPUArchitecture', false)
            universalApk safeExtGet('universalApk', false)  // If true, also generate a universal APK
            include "armeabi-v7a", "x86"
        }
    }
}

dependencies {
    compileOnly "com.facebook.react:react-native:+"
}
